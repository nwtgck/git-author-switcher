#! /usr/bin/ruby

require 'yaml'

# Run command with p
def system_with_echo(cmd_str)
  puts("> #{cmd_str}")
  system(cmd_str)
end

# Find authors by uncomplete ID
def smart_find(yaml_id_to_author, uncomplete_id)
  yaml_authors = yaml_id_to_author.select{|id, author|
    id.start_with?(uncomplete_id)
  }
  .values
end

# Get ID from a command argument
uncomplete_id = ARGV[0]

# ID is not specified
if uncomplete_id.nil?
  puts ("Usage: #{__FILE__} <id>")
  exit 1
end

# Get authors from yaml setting
yaml_id_to_author = YAML.load_file("authors.yaml")

yaml_authors = smart_find(yaml_id_to_author, uncomplete_id)

if(yaml_authors.length == 0)
  $stderr.puts("Error: There isn't any matching author with '#{uncomplete_id}'")
  exit 1
elsif(yaml_authors.length != 1)
  $stderr.puts("Error: Duplicate ids: #{yaml_authors.map{|a| a['name']}.join(' and ')} ")
  exit 1
end

yaml_author = yaml_authors.first

# Run commands
puts("Run:")
system_with_echo("git config user.name '#{yaml_author['name']}'")
system_with_echo("git config user.email '#{yaml_author['email']}'")

puts()

# Confirmation of git config
puts("Confirmation:")
system_with_echo("git config --local --list")
